name: Deploy AI Search Booster

on:
  workflow_dispatch:
    inputs:
      deploy_shopify:
        description: 'Deploy Shopify app configuration'
        required: false
        default: 'false'
        type: boolean

env:
  NODE_VERSION: '18'

jobs:
  test-services:
    name: Test Services Health
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Test backend health
        run: |
          echo "[ASB-CI] Testing backend health..."
          backend_response=$(curl -s "https://ai-search-booster-backend.onrender.com/health")
          echo "[ASB-CI] Backend response: $backend_response"
          
          if echo "$backend_response" | grep -q '"status":"healthy"'; then
            echo "[ASB-CI] ✅ Backend is healthy!"
          else
            echo "[ASB-CI] ❌ Backend health check failed"
            exit 1
          fi

      - name: Test frontend accessibility
        run: |
          echo "[ASB-CI] Testing frontend accessibility..."
          frontend_response=$(curl -s -o /dev/null -w "%{http_code}" "https://ai-search-booster-frontend.onrender.com/?shop=aisearch-dev.myshopify.com" || echo "000")
          echo "[ASB-CI] Frontend status: HTTP $frontend_response"
          
          if [ "$frontend_response" = "200" ]; then
            echo "[ASB-CI] ✅ Frontend is accessible!"
          else
            echo "[ASB-CI] ❌ Frontend not accessible (HTTP $frontend_response)"
            exit 1
          fi

      - name: Test app proxy status
        run: |
          echo "[ASB-CI] Testing app proxy..."
          proxy_response=$(curl -s -o /dev/null -w "%{http_code}" "https://aisearch-dev.myshopify.com/apps/ai-search-booster/health" || echo "000")
          echo "[ASB-CI] App proxy status: HTTP $proxy_response"
          
          if [ "$proxy_response" = "200" ]; then
            echo "[ASB-CI] ✅ App proxy is working!"
          elif [ "$proxy_response" = "302" ]; then
            echo "[ASB-CI] ⚠️  App proxy returns redirect (HTTP 302)"
            echo "[ASB-CI] This usually means the proxy is not registered in Shopify Partners"
            echo "[ASB-CI] Manual registration needed via Shopify CLI"
          else
            echo "[ASB-CI] ❌ App proxy not working (HTTP $proxy_response)"
          fi

  deploy-shopify-config:
    name: Deploy Shopify App Configuration
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.deploy_shopify == 'true' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Shopify CLI
        run: |
          echo "[ASB-CI] Installing Shopify CLI v3..."
          npm install -g @shopify/cli @shopify/app
          shopify version

      - name: Deploy app configuration (if secrets available)
        run: |
          echo "[ASB-CI] Checking for required secrets..."
          if [ -z "${{ secrets.SHOPIFY_API_KEY }}" ] || [ -z "${{ secrets.SHOPIFY_API_SECRET }}" ]; then
            echo "[ASB-CI] ⚠️  Required secrets not found:"
            echo "[ASB-CI] - SHOPIFY_API_KEY: ${{ secrets.SHOPIFY_API_KEY && 'SET' || 'NOT SET' }}"
            echo "[ASB-CI] - SHOPIFY_API_SECRET: ${{ secrets.SHOPIFY_API_SECRET && 'SET' || 'NOT SET' }}"
            echo "[ASB-CI] Manual deployment via Shopify CLI required"
            echo "[ASB-CI] Run: shopify app deploy --force"
            exit 0
          fi
          
          echo "[ASB-CI] Deploying app configuration..."
          cat shopify.app.toml
          echo "[ASB-CI] This would run: shopify app deploy --force"
          echo "[ASB-CI] (Authentication setup needed)"
        env:
          SHOPIFY_API_KEY: ${{ secrets.SHOPIFY_API_KEY }}
          SHOPIFY_API_SECRET: ${{ secrets.SHOPIFY_API_SECRET }}

      - name: Test app proxy endpoint
        run: |
          echo "[ASB-CI] Testing app proxy endpoint..."
          sleep 30  # Wait for proxy to be registered
          
          echo "[ASB-CI] Testing health endpoint via proxy..."
          response=$(curl -s -o /dev/null -w "%{http_code}" "https://aisearch-dev.myshopify.com/apps/ai-search-booster/health" || echo "000")
          
          if [ "$response" = "200" ]; then
            echo "[ASB-CI] ✅ App proxy is working! (HTTP $response)"
          else
            echo "[ASB-CI] ❌ App proxy failed (HTTP $response)"
            echo "[ASB-CI] Testing direct backend..."
            direct_response=$(curl -s -o /dev/null -w "%{http_code}" "https://ai-search-booster-backend.onrender.com/health" || echo "000")
            echo "[ASB-CI] Direct backend health: HTTP $direct_response"
            
            if [ "$response" != "200" ]; then
              echo "[ASB-CI] App proxy registration may have failed"
              exit 1
            fi
          fi

  test-dashboard:
    name: Test Dashboard Functionality
    runs-on: ubuntu-latest
    needs: deploy-shopify-config
    
    steps:
      - name: Test dashboard API calls
        run: |
          echo "[ASB-CI] Testing dashboard API functionality..."
          
          # Test products endpoint via proxy
          echo "[ASB-CI] Testing products API via app proxy..."
          products_response=$(curl -s "https://aisearch-dev.myshopify.com/apps/ai-search-booster/api/products?shop=aisearch-dev.myshopify.com" || echo '{"error":"request_failed"}')
          echo "[ASB-CI] Products API response: $products_response"
          
          # Check if response contains products
          if echo "$products_response" | grep -q '"products"'; then
            echo "[ASB-CI] ✅ Products API working via app proxy!"
          else
            echo "[ASB-CI] ❌ Products API not working via app proxy"
            echo "[ASB-CI] Response: $products_response"
          fi
          
          # Test frontend accessibility
          echo "[ASB-CI] Testing frontend accessibility..."
          frontend_response=$(curl -s -o /dev/null -w "%{http_code}" "https://ai-search-booster-frontend.onrender.com/?shop=aisearch-dev.myshopify.com" || echo "000")
          echo "[ASB-CI] Frontend status: HTTP $frontend_response"
          
          if [ "$frontend_response" = "200" ]; then
            echo "[ASB-CI] ✅ Frontend is accessible!"
          else
            echo "[ASB-CI] ❌ Frontend not accessible (HTTP $frontend_response)"
          fi